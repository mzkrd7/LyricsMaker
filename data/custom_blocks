[{"code":"String[] %1$sspinnerItems \u003d getResources().getStringArray(R.array.%2$s);\n%1$s.setAdapter(new ArrayAdapter(this, android.R.layout.simple_list_item_1, android.R.id.text1, %1$sspinnerItems) {\n\n@Override\npublic View getView(int position, View convertView, ViewGroup parent) {\nTextView textView1 \u003d (TextView) super.getView(position, convertView, parent);\ntextView1.setTextColor(Color.parseColor(\"%3$s\"));\nreturn textView1; }\n\n@Override\npublic View getDropDownView(int position, View convertView, ViewGroup parent) {\nTextView textView1 \u003d (TextView) super.getDropDownView(position, convertView, parent); textView1.setTextColor(Color.parseColor(\"%3$s\"));\n\ntextView1.setBackgroundColor(Color.parseColor(\"%4$s\"));\n\nreturn textView1; }\n});","color":-16121,"name":"spinnerlook","paletteColor":0,"spec":"%m.spinner get from array %s.inputOnly  text color%s.inputOnly bg color %s.inputOnly","spec2":""},{"code":"menu.add(Menu.NONE, %1$s, Menu.NONE, R.string.%2$s);","color":-14575885,"name":"tbmlmi","paletteColor":0,"spec":"Add item with case \u003e\u003e %d R string \u003e\u003e %s.inputOnly","spec2":""},{"code":"Bitmap %1$s \u003d ThumbnailUtils.createVideoThumbnail(%2$s, android.provider.MediaStore.Video.Thumbnails.FULL_SCREEN_KIND);","color":-769226,"name":"md1","paletteColor":0,"spec":"Bitmap %s.inputOnly get cover from %m.varStr","spec2":""},{"code":"getWindow().getDecorView().setBackgroundResource(android.R.color.transparent);\n\n{\nandroid.graphics.drawable.GradientDrawable SketchUi \u003d new android.graphics.drawable.GradientDrawable();\nint d \u003d (int) getApplicationContext().getResources().getDisplayMetrics().density;\nSketchUi.setColor(%1$s);SketchUi.setCornerRadius(d*%2$s);\n\n((ViewGroup)getWindow().getDecorView()).getChildAt(0).setBackground(SketchUi);\n}","color":-10453621,"name":"dialogF0","paletteColor":0,"spec":"When you want this activity as dialog set bg %m.color and corner radius %d","spec2":""},{"code":"\n%2$s","color":-8825528,"name":"comment","paletteColor":0,"spec":"Comment %s.inputOnly","spec2":""},{"code":"case %1$s:\n\n%2$s\n\nreturn true;","color":-14575885,"name":"tbmlc","paletteColor":0,"spec":"Case %d","spec2":""},{"code":"%1$s.getDuration()","color":-16738393,"name":"get  mediaplayer from path duration","paletteColor":0,"spec":"get %m.mediaplayer from path duration","spec2":""},{"code":"if (!(%1$s \u003d\u003d null)) {\n    %2$s.setImageBitmap(%1$s);\n} else {\n    %3$s.setImageResource(R.drawable.%4$s);\n}","color":-11899692,"name":"md303","paletteColor":0,"spec":"If Bitmap %s.InputOnly gets the cover make %m.imageview to cover | if not make %m.imageview to %m.resource ","spec2":""},{"code":"progressDialog.setMessage(\"Loading...\");\nprogressDialog.setCancelable(false);\nprogressDialog.show();\n\nnew Thread(new Runnable() {\n    @Override\n    public void run() {\n        %2$s \u003d new ArrayList\u003c\u003e(); // Create a new list before scanning\n        _scanMusicFiles(%1$s);\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                progressDialog.dismiss(); // Hide loading when done\n                %3$s.setAdapter(new %4$sAdapter(%2$s));\n                ((BaseAdapter) %3$s.getAdapter()).notifyDataSetChanged();\n            }\n        });\n    }\n}).start();\n\n}\n\nvoid _scanMusicFiles(String path) {\n    ArrayList\u003cString\u003e files \u003d new ArrayList\u003c\u003e();\n    FileUtil.listDir(path, files);\n\n    for (String filePath : files) {\n        File file \u003d new File(filePath);\n        if (file.isDirectory()) {\n            _scanMusicFiles(filePath); // Scan subfolder\n        } else if (_isAudioFile(filePath)) { // Check for audio file formats\n            HashMap\u003cString, Object\u003e item \u003d new HashMap\u003c\u003e();\n            item.put(\"location\", filePath); // Store music path here\n\n            // Extract metadata\n            MediaMetadataRetriever mediametadataretriever \u003d new MediaMetadataRetriever();\n            try {\n                mediametadataretriever.setDataSource(filePath);\n\n                String title \u003d getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_TITLE);\n                if (title \u003d\u003d null || title.isEmpty()) {\n                    title \u003d file.getName(); // Use file name if no title found\n                }\n                item.put(\"title\", title);\n\n                item.put(\"artist\", getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_ARTIST));\n                item.put(\"year\", getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_YEAR));\n                item.put(\"date\", getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_DATE));\n                item.put(\"bitrate\", getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_BITRATE));\n\n                // Get and store the duration (without formatting)\n                String durationStr \u003d getMetadata(mediametadataretriever, MediaMetadataRetriever.METADATA_KEY_DURATION);\n                item.put(\"duration\", durationStr !\u003d null ? durationStr : \"Unknown\");\n\n                // Get album art (optional)\n                Bitmap image \u003d ThumbnailUtils.createVideoThumbnail(filePath, android.provider.MediaStore.Video.Thumbnails.FULL_SCREEN_KIND);\n                item.put(\"image\", image);\n\n            } catch (Exception e) {\n                e.printStackTrace();\n            } finally {\n                try {\n                    mediametadataretriever.release(); // Release retriever to free memory\n                } catch (IOException e) {\n                    e.printStackTrace(); // Handle the IOException during release\n                }\n            }\n\n            %2$s.add(item);\n        }\n    }\n}\n\n// Helper function to safely get metadata\nprivate String getMetadata(MediaMetadataRetriever retriever, int key) {\n    String value \u003d retriever.extractMetadata(key);\n    return value !\u003d null ? value : \"Unknown\";\n}\n\n// Function to check if a file is an audio file\nboolean _isAudioFile(String filePath) {\n    return filePath.endsWith(\".mp3\") || filePath.endsWith(\".m4a\") || \n           filePath.endsWith(\".wav\") || filePath.endsWith(\".flac\") || \n           filePath.endsWith(\".ogg\") || filePath.endsWith(\".aac\") || \n           filePath.endsWith(\".wma\") || filePath.endsWith(\".amr\") || \n           filePath.endsWith(\".aiff\") || filePath.endsWith(\".ape\") || \n           filePath.endsWith(\".opus\");","color":-6543440,"name":"GASTLM","paletteColor":0,"spec":"Get all songs from %s and its subdirectories put it into %m.listMap for %m.listview type the listview name but the first letter Capital %s.inputOnly || MoreBlock ||","spec2":""},{"code":"%1$s \u003d mediametadataretriever.extractMetadata(%2$s);","color":-769226,"name":"md2","paletteColor":0,"spec":"Make %m.varStr get %s.md ","spec2":""},{"code":"MediaMetadataRetriever mediametadataretriever \u003d new MediaMetadataRetriever();\n\nmediametadataretriever.setDataSource(%1$s);","color":-769226,"name":"md0","paletteColor":0,"spec":"Metadata get info from %m.varStr","spec2":""},{"code":"}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu)\n{\n%1$s\n\nreturn true;\n\n}","color":-14575885,"name":"tbia","paletteColor":0,"spec":"Create toolbar menu","spec2":""},{"code":"\n    }public void setLocale(String lang) {\n\njava.util.Locale myLocale \u003d new Locale(lang);\n        android.content.res.Resources res \u003d getResources();\n        android.util.DisplayMetrics dm \u003d res.getDisplayMetrics();\n        android.content.res.Configuration conf \u003d res.getConfiguration();\n        conf.locale \u003d myLocale;\n        res.updateConfiguration(conf, dm);\n        \n    }\n    {","color":-14575885,"name":"langMoreblock","paletteColor":0,"spec":"MoreBlock","spec2":""},{"code":"setLocale(%1$s);","color":-14575885,"name":"selectLang","paletteColor":0,"spec":"Set local %s ","spec2":""},{"code":"MediaMetadataRetriever.METADATA_KEY_TITLE","color":-769226,"name":"md21","paletteColor":0,"spec":"Title","spec2":""},{"code":"@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()) {\n    \n       %1$s\n    \n     }\n    return super.onOptionsItemSelected(item);\n","color":-14575885,"name":"tbmlois","paletteColor":0,"spec":"onOptionsItemSelected","spec2":""},{"code":"}\r\n// setTheme() should be set before setContentView() so a small hack to do this in sketchware\r\n @Override \n    public void setContentView( int layoutResID) {\r\n\tif(getIntent().getBooleanExtra(\"dialogTheme\",true)){\r\n\t\tsupportRequestWindowFeature(Window.FEATURE_NO_TITLE);\n\t\tsetTheme(R.style.Theme_AppCompat_Light_Dialog);\n\t\tsetFinishOnTouchOutside(%1$s);\n\t\t\n\t\t\n\t\t/*\nrequestWindowFeature(Window.FEATURE_NO_TITLE);\nsetTheme(android.R.style.Theme_Dialog);\n*/\r\n\t\t\r\n\t\ttry {\n\t\t\t \tjava.lang.reflect.Method getActivityOptions \u003d Activity.class.getDeclaredMethod(\"getActivityOptions\"); getActivityOptions.setAccessible(true);\n\t\t\t Object options \u003d getActivityOptions.invoke(this); Class\u003c?\u003e[] classes \u003d Activity.class.getDeclaredClasses(); Class\u003c?\u003e translucentConversionListenerClazz \u003d null; \n\t\t\tfor (Class clazz : classes) { if (clazz.getSimpleName().contains(\"TranslucentConversionListener\")) { translucentConversionListenerClazz \u003d clazz; } } \n\t\t\tjava.lang.reflect.Method convertToTranslucent \u003d Activity.class.getDeclaredMethod(\"convertToTranslucent\", translucentConversionListenerClazz, ActivityOptions.class); convertToTranslucent.setAccessible(true); convertToTranslucent.invoke(this, null, options); } catch (Throwable t) {\n\t\t}\r\n\t}\r\n\tsuper.setContentView(layoutResID);  \r\n}\r\n{","color":-10453621,"name":"dialogF1","paletteColor":0,"spec":"MoreBlock : If ActivityTheme is tru then make this activity to dialog/Cancelable %b","spec2":""},{"code":"MediaMetadataRetriever.METADATA_KEY_MIMETYPE","color":-769226,"name":"md19","paletteColor":0,"spec":"Mime Type","spec2":""},{"code":"\nMenuItem %1$s \u003d menu.add(Menu.NONE, %2$s, Menu.NONE, R.string.%3$s); %1$s.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM); %1$s.setIcon(R.drawable.%4$s); \n","color":-14575885,"name":"tbiwi_copy44","paletteColor":0,"spec":"Name %s.inputOnly case %d R string %s.inputOnly With Icon %m.resource ","spec2":""},{"code":"MediaMetadataRetriever.METADATA_KEY_ARTIST","color":-769226,"name":"md5","paletteColor":0,"spec":"Artist","spec2":""},{"code":"%1$s.setEllipsize(android.text.TextUtils.TruncateAt.MARQUEE);\n%1$s.setMarqueeRepeatLimit(%2$s);\n%1$s.setSingleLine(true);\n%1$s.setSelected(true);","color":-16121,"name":"lala","paletteColor":0,"spec":"Marquee %m.textview scroll limit %d (-1 for infinite)","spec2":""},{"code":"recreate();","color":-14575885,"name":"langRestart","paletteColor":0,"spec":"Restart activity","spec2":""},{"code":"MediaMetadataRetriever.METADATA_KEY_YEAR","color":-769226,"name":"md26","paletteColor":0,"spec":"Year","spec2":""},{"code":"%1$s.setImageBitmap(%2$s);","color":-11899692,"name":"md101","paletteColor":0,"spec":"%m.imageview setImageFromBitmap %s.inputOnly","spec2":""},{"code":"MediaMetadataRetriever.METADATA_KEY_BITRATE","color":-769226,"name":"md7","paletteColor":0,"spec":"Bitrate","spec2":""},{"code":"%1$s \u003d MediaPlayer.create(getApplicationContext(), Uri.fromFile(new java.io.File(%2$s)));","color":-6543440,"name":"md202","paletteColor":0,"spec":"%m.mediaplayer play music from %m.varStr","spec2":""},{"code":"%1$s +\u003d%2$s;","color":-43230,"name":"stradd","paletteColor":0,"spec":"%m.varStr Add text %s (combines)","spec2":""},{"code":"if (!(%1$s \u003d\u003d null)) {\n    %2$s\n} else {\n    %3$s\n}","color":-6543440,"name":"md27","paletteColor":0,"spec":"if have %m.varStr then (like title)","spec2":"if doesn\u0027t have it then"}]